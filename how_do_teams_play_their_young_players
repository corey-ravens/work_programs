


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Get down to one row of draft board position. Take a players draft
board position from as late in the process as available. 

OUTPUT TABLES:
#temp_draft_board_positions_with_order

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_draft_board_positions exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_draft_board_positions') IS NOT NULL
	DROP TABLE #temp_draft_board_positions

	SELECT player_id AS bane_player_id
		,position
		,CASE WHEN UPPER(LTRIM(RTRIM([type]))) = 'PRE-DRAFT' THEN 1
			WHEN UPPER(LTRIM(RTRIM([type]))) = 'POST-APR' THEN 2
			WHEN UPPER(LTRIM(RTRIM([type]))) = 'POST-FEB' THEN 3
			ELSE NULL
	END AS order_by
	INTO #temp_draft_board_positions
	FROM [BaneProductionAnalytics].[dbo].[draft_board_grades]
	WHERE position != ''
		AND position IS NOT NULL
		AND player_id <> 64668


-- Check if #temp_draft_board_positions_with_order exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_draft_board_positions_with_order') IS NOT NULL
	DROP TABLE #temp_draft_board_positions_with_order

	SELECT bane_player_id
		,position
		,RANK() OVER (PARTITION BY bane_player_id ORDER BY order_by) AS draft_board_position_order
	INTO #temp_draft_board_positions_with_order
	FROM #temp_draft_board_positions

/*
SELECT *
FROM #temp_draft_board_positions_with_order
*/

-- Check if #temp_draft_board_positions_latest exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_draft_board_positions_latest') IS NOT NULL
	DROP TABLE #temp_draft_board_positions_latest

	SELECT *
	INTO #temp_draft_board_positions_latest
	FROM #temp_draft_board_positions_with_order
	WHERE draft_board_position_order = 1

/*
SELECT *
FROM #temp_draft_board_positions_latest
*/


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Get down to one row of draft board grade. Take a players draft
board grade from as late in the process as available. 

OUTPUT TABLES:
#temp_draft_board_grades_with_order

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_draft_board_grades exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_draft_board_grades') IS NOT NULL
	DROP TABLE #temp_draft_board_grades

	SELECT player_id AS bane_player_id
		,legacy_grade
		,CASE WHEN UPPER(LTRIM(RTRIM([type]))) = 'PRE-DRAFT' THEN 1
			WHEN UPPER(LTRIM(RTRIM([type]))) = 'POST-APR' THEN 2
			WHEN UPPER(LTRIM(RTRIM([type]))) = 'POST-FEB' THEN 3
			ELSE NULL
	END AS order_by
	INTO #temp_draft_board_grades
	FROM [BaneProductionAnalytics].[dbo].[draft_board_grades]
	WHERE legacy_grade != ''
		AND legacy_grade IS NOT NULL
		AND player_id <> 64668


-- Check if #temp_draft_board_grades_with_order exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_draft_board_grades_with_order') IS NOT NULL
	DROP TABLE #temp_draft_board_grades_with_order

	SELECT bane_player_id
		,legacy_grade
		,RANK() OVER (PARTITION BY bane_player_id ORDER BY order_by) AS draft_board_grade_order
	INTO #temp_draft_board_grades_with_order
	FROM #temp_draft_board_grades

/*
SELECT *
FROM #temp_draft_board_grades_with_order
*/

-- Check if #temp_draft_board_grades_latest exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_draft_board_grades_latest') IS NOT NULL
	DROP TABLE #temp_draft_board_grades_latest

	SELECT *
	INTO #temp_draft_board_grades_latest
	FROM #temp_draft_board_grades_with_order
	WHERE draft_board_grade_order = 1

/*
SELECT *
FROM #temp_draft_board_grades_latest
*/


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Create a temp table with all players who have been on a 53 so you can have
a variable denoting whether a player ever made a 53. You may not want to count
these players against teams that get them.

OUTPUT TABLES:
#temp_player_on_53

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_player_on_53 exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_player_on_53') IS NOT NULL
	DROP TABLE #temp_player_on_53

	SELECT DISTINCT nfl_player_id
		,1 AS on_53
	INTO #temp_player_on_53
	FROM Analytics.dbo.analysis_players_gameweek_status
	WHERE status_roster_simple IN ('ACTIVE','INACTIVE')
		AND season_type IN ('REG','POST')


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Join the draft board position and player identifying information.

You can join this to the play data to get snaps played by first and second year players.

OUTPUT TABLES:
#temp_player_list

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_player_list exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_player_list') IS NOT NULL
	DROP TABLE #temp_player_list

	SELECT nfl_id AS nfl_player_id
		,pl.id AS bane_player_id
		,CONCAT(last_name,', ',goes_by) AS player
		,nfl_entry_year
		,draft_round
		,draft_number
		,cl.nfl_club_id AS nfl_entry_club_id_not_bane
		,COALESCE(po.position,pos.translation) AS position
		,pos.team AS side_of_ball
		,legacy_grade	
		,COALESCE(on_53,0) AS on_53
	INTO #temp_player_list
	FROM BaneProductionAnalytics.dbo.players pl
	LEFT JOIN #temp_draft_board_positions_latest po
		ON pl.id = po.bane_player_id
	LEFT JOIN #temp_draft_board_grades_latest gr
		ON pl.id = gr.bane_player_id
	LEFT JOIN BaneProductionAnalytics.dbo.clubs cl
		ON pl.nfl_entry_club_id = cl.id
		--AND cl.is_disabled = 0
	LEFT JOIN BaneProductionAnalytics.dbo.positions pos
		ON pl.position_id = pos.id
	LEFT JOIN #temp_player_on_53 o53
		ON pl.nfl_id = o53.nfl_player_id
	WHERE pl.is_deleted = 0
		AND pl.draft_year >= 2005
		AND ABS(pl.draft_year - pl.nfl_entry_year) < 10
		AND pl.nfl_id IS NOT NULL


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Create a Play Time Table

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_play_times exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_play_times') IS NOT NULL
	DROP TABLE #temp_play_times

	SELECT PlayerID AS nfl_player_id
		,pt.season
		,pt.ClubID AS nfl_club_id
		,COUNT(gs.nfl_game_key) AS games
		,SUM(CASE WHEN (status_roster_simple = 'INJURED' OR (status_roster_simple = 'INACTIVE' AND injury_status_week IS NOT NULL)) THEN NULL ELSE CAST(OffensivePlays AS FLOAT) END) / NULLIF(SUM(CASE WHEN (status_roster_simple = 'INJURED' OR (status_roster_simple = 'INACTIVE' AND injury_status_week IS NOT NULL)) THEN NULL ELSE CAST(TeamOffensivePlays AS FLOAT) END),0) AS play_time_offense
		,SUM(CASE WHEN (status_roster_simple = 'INJURED' OR (status_roster_simple = 'INACTIVE' AND injury_status_week IS NOT NULL)) THEN NULL ELSE CAST(DefensivePlays AS FLOAT) END) / NULLIF(SUM(CASE WHEN (status_roster_simple = 'INJURED' OR (status_roster_simple = 'INACTIVE' AND injury_status_week IS NOT NULL)) THEN NULL ELSE CAST(TeamDefensivePlays AS FLOAT) END),0) AS play_time_defense
		,SUM(CASE WHEN (status_roster_simple = 'INJURED' OR (status_roster_simple = 'INACTIVE' AND injury_status_week IS NOT NULL)) THEN NULL ELSE CAST(SpecialTeamPlays AS FLOAT) END) / NULLIF(SUM(CASE WHEN (status_roster_simple = 'INJURED' OR (status_roster_simple = 'INACTIVE' AND injury_status_week IS NOT NULL)) THEN NULL ELSE CAST(TeamSpecialTeamPlays AS FLOAT) END),0) AS play_time_st
	INTO #temp_play_times
	FROM ClubDB.dbo.PlayTime pt
	INNER JOIN [BaneProductionAnalytics].dbo.pro_games pg
		ON pt.GameKey = pg.nfl_game_key
	INNER JOIN Analytics.dbo.analysis_players_gameweek_status gs
		ON pt.PlayerID = gs.nfl_player_id
		AND pt.GameKey = gs.nfl_game_key
	WHERE UPPER(pg.season_type) = 'REG'
	GROUP BY PlayerID	  
		,pt.season
		,pt.ClubID


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Join the season to the offensive alignment table

OUTPUT TABLES:
#temp_plays_player_offensive_alignment

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_plays_player_offensive_alignment exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_plays_player_offensive_alignment') IS NOT NULL
	DROP TABLE #temp_plays_player_offensive_alignment

	SELECT oa.*
		,an.season
	INTO #temp_plays_player_offensive_alignment
	FROM Analytics.dbo.stage_plays_player_offensive_alignment oa
	INNER JOIN Analytics.dbo.stage_plays_play_ancillary an
		ON oa.pff_play_id = an.pff_play_id
	WHERE season >= 2012
		AND season_type_adjusted = 'REGPOST'


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Join the season to the defensive alignment table

OUTPUT TABLES:
#temp_plays_player_defensive_alignment

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_plays_player_defensive_alignment exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_plays_player_defensive_alignment') IS NOT NULL
	DROP TABLE #temp_plays_player_defensive_alignment

	SELECT oa.*
		,an.season
	INTO #temp_plays_player_defensive_alignment
	FROM Analytics.dbo.stage_plays_player_defensive_alignment oa
	INNER JOIN Analytics.dbo.stage_plays_play_ancillary an
		ON oa.pff_play_id = an.pff_play_id
	WHERE season >= 2012
		AND season_type_adjusted = 'REGPOST'


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Join a player's season grade to every play he had for a season.  Then you can sum
up snaps by position played for every team and position.

Insert the offensive data then the defensive data.

OUTPUT TABLES:
#temp_players_snaps_with_grades

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_players_snaps_with_grades exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_players_snaps_with_grades') IS NOT NULL
	DROP TABLE #temp_players_snaps_with_grades

	SELECT oa.nfl_player_id
		,CONCAT(pl.last_name,', ',pl.goes_by) AS player
		,CASE WHEN position_blt IN ('LT','RT') THEN 'OT'
			WHEN position_blt IN ('LG','OC','RG') THEN 'OG'
			ELSE position_blt
		END AS position_blt
		,oa.pff_play_id
		,oa.season
		,cl.nfl_club_id
		,oa.pff_pp_id
		,CASE WHEN oa.team = 'SD' THEN 'LAC' WHEN oa.team = 'SL' THEN 'LA' ELSE oa.team END AS club
		,CASE WHEN pgc.grade_bucket < 5.7 THEN 5.7
			ELSE ISNULL(pgc.grade_bucket,5.7)
		END AS pro_grade_current
	INTO #temp_players_snaps_with_grades
	FROM #temp_plays_player_offensive_alignment oa
	INNER JOIN BaneProductionAnalytics.dbo.players pl
		ON oa.nfl_player_id = pl.nfl_id	
		AND pl.is_deleted = 0
	LEFT JOIN Analytics.dbo.analysis_players_pro_grades	pgc
		ON oa.nfl_player_id = pgc.nfl_player_id
		AND oa.season = pgc.report_season
		AND pgc.created_date = (SELECT MAX(created_date) FROM Analytics.dbo.analysis_players_pro_grades)
	INNER JOIN BaneProductionAnalytics.dbo.clubs cl
		ON CASE WHEN oa.team = 'SD' THEN 'LAC' WHEN oa.team = 'SL' THEN 'LA' ELSE oa.team END = cl.code


	INSERT INTO #temp_players_snaps_with_grades
	SELECT oa.nfl_player_id
		,CONCAT(pl.last_name,', ',pl.goes_by) AS player
		,CASE WHEN position_blt IN ('DT3T','NT','DT') THEN 'DT'
			WHEN position_blt IN ('DE5T','DE') THEN 'DE'
			WHEN position_blt IN ('DE43','OB34','RUSH','SAM') THEN 'OB'
			WHEN position_blt IN ('MIKE','WILL','IB','OB43') THEN 'IB'
			WHEN position_blt IN ('CB','NB') THEN 'DC'
			WHEN position_blt IN ('FS','SS') THEN 'DS'
			ELSE position_blt
		END AS position_blt
		,oa.pff_play_id
		,oa.season
		,cl.nfl_club_id
		,oa.pff_pp_id
		,CASE WHEN oa.team = 'SD' THEN 'LAC' WHEN oa.team = 'SL' THEN 'LA' ELSE oa.team END AS club
		,CASE WHEN pgc.grade_bucket < 5.7 THEN 5.7
			ELSE ISNULL(pgc.grade_bucket,5.7)
		END AS pro_grade_current
	FROM #temp_plays_player_defensive_alignment oa
	INNER JOIN BaneProductionAnalytics.dbo.players pl
		ON oa.nfl_player_id = pl.nfl_id	
		AND pl.is_deleted = 0
	LEFT JOIN Analytics.dbo.analysis_players_pro_grades	pgc
		ON oa.nfl_player_id = pgc.nfl_player_id
		AND oa.season = pgc.report_season
		AND pgc.created_date = (SELECT MAX(created_date) FROM Analytics.dbo.analysis_players_pro_grades)
	INNER JOIN BaneProductionAnalytics.dbo.clubs cl
		ON CASE WHEN oa.team = 'SD' THEN 'LAC' WHEN oa.team = 'SL' THEN 'LA' ELSE oa.team END = cl.code


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Join a player's season grade to every play he had for a season.  Then you can sum
up snaps by position played for every team and position.

OUTPUT TABLES:
#temp_players_snaps_with_grades

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_players_snaps_with_values exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_players_snaps_with_values') IS NOT NULL
	DROP TABLE #temp_players_snaps_with_values

	SELECT *
		,CASE WHEN CAST(pro_grade_current AS NUMERIC (3,1)) IN (8.0) THEN 100
			WHEN CAST(pro_grade_current AS NUMERIC (3,1)) IN (7.0) THEN 92
			WHEN CAST(pro_grade_current AS NUMERIC (3,1)) IN (6.9) THEN 82
			WHEN CAST(pro_grade_current AS NUMERIC (3,1)) IN (6.7,6.5) THEN 71
			WHEN CAST(pro_grade_current AS NUMERIC (3,1)) IN (6.4,6.3,6.2) THEN 64
			WHEN CAST(pro_grade_current AS NUMERIC (3,1)) IN (6.1,6.0) THEN 58
			WHEN CAST(pro_grade_current AS NUMERIC (3,1)) IN (5.9) THEN 53.5
			WHEN CAST(pro_grade_current AS NUMERIC (3,1)) IN (5.8) THEN 50
			WHEN CAST(pro_grade_current AS NUMERIC (3,1)) IN (5.7) THEN 47
			WHEN CAST(pro_grade_current AS NUMERIC (3,1)) IN (5.6) THEN 45.5
			WHEN CAST(pro_grade_current AS NUMERIC (3,1)) IN (5.4) THEN 43
			WHEN CAST(pro_grade_current AS NUMERIC (3,1)) IN (5.2) THEN 41
			WHEN CAST(pro_grade_current AS NUMERIC (3,1)) IN (5.0) THEN 40
			ELSE NULL
		END AS pro_grade_current_value  
	INTO #temp_players_snaps_with_values
	FROM #temp_players_snaps_with_grades


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Find the grade weighted average value for every team, player, position, season.

OUTPUT TABLES:
#temp_weighted_average_grades

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_weighted_average_grades exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_weighted_average_grades') IS NOT NULL
	DROP TABLE #temp_weighted_average_grades

	SELECT club
		,nfl_club_id
		,season
		,nfl_player_id
		,position_blt
		,COUNT(pff_pp_id) AS position_snap_count
		,(SELECT AVG(pro_grade_current_value) FROM #temp_players_snaps_with_values ps2 WHERE ps.season = ps2.season AND ps.nfl_club_id = ps2.nfl_club_id AND ps.position_blt = ps2.position_blt AND ps.nfl_player_id <> ps2.nfl_player_id) AS current_snap_grade_avg
	INTO #temp_weighted_average_grades
	FROM #temp_players_snaps_with_values ps
	GROUP BY club
		,nfl_club_id
		,season
		,nfl_player_id
		,position_blt


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Order the weighted average snap counts so you only take the position where the player played most.

OUTPUT TABLES:
#temp_weighted_average_grades_order

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_weighted_average_grades_order exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_weighted_average_grades_order') IS NOT NULL
	DROP TABLE #temp_weighted_average_grades_order

	SELECT *
		,RANK() OVER (PARTITION BY nfl_player_id, season, nfl_club_id ORDER BY position_snap_count DESC, current_snap_grade_avg DESC) AS weighted_average_order
	INTO #temp_weighted_average_grades_order
	FROM #temp_weighted_average_grades
	WHERE nfl_player_id = 41393


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Join the snaps to the player information

OUTPUT TABLE:
#temp_player_play_time

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_player_play_time exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_player_play_time') IS NOT NULL
	DROP TABLE #temp_player_play_time

	SELECT pl.nfl_player_id
		,player
		,CASE WHEN position IN ('SS','FS') THEN 'DS'
			WHEN position IN ('DP','RUSH','SAM') THEN 'OB'
			WHEN position IN ('WO','WR') THEN 'WR'
			WHEN position IN ('OH','RB') THEN 'RB'
			WHEN position IN ('OG','OC') THEN 'OG'
			ELSE position
		END AS position
		,nfl_entry_year
		,pt.season AS season
		,1 AS seasons_since_draft
		,CASE WHEN draft_round IS NULL THEN 8 ELSE draft_round END AS draft_round
		,ec.code AS draft_team
		,ec.nfl_club_id
		,on_53
		--,COALESCE(CASE WHEN pl.nfl_entry_club_id = pt.nfl_club_id THEN 1 ELSE 0 END,0) AS same_team
		,CASE WHEN pt.nfl_player_id IS NULL THEN 0
			WHEN side_of_ball = 'offense' THEN play_time_offense
			WHEN side_of_ball = 'defense' THEN play_time_defense
			ELSE NULL
		END AS play_time
	INTO #temp_player_play_time
	FROM #temp_player_list pl
	LEFT JOIN #temp_play_times pt
		ON pl.nfl_player_id = pt.nfl_player_id
		AND pl.nfl_entry_year = pt.season
		AND pl.nfl_entry_club_id_not_bane = pt.nfl_club_id
	LEFT JOIN BaneProductionAnalytics.dbo.clubs ec
		ON pl.nfl_entry_club_id_not_bane = ec.nfl_club_id
		AND ec.is_disabled = 0


	INSERT INTO #temp_player_play_time
	SELECT pl.nfl_player_id
		,player
		,CASE WHEN position IN ('SS','FS') THEN 'DS'
			WHEN position IN ('DP','RUSH','SAM') THEN 'OB'
			WHEN position IN ('WO','WR') THEN 'WR'
			WHEN position IN ('OH','RB') THEN 'RB'
			WHEN position IN ('OG','OC') THEN 'OG'
			ELSE position
		END AS position
		,nfl_entry_year
		,pt.season AS season
		,2 AS seasons_since_draft
		,CASE WHEN draft_round IS NULL THEN 8 ELSE draft_round END AS draft_round
		,ec.code AS draft_team
		,ec.nfl_club_id
		,on_53
		--,COALESCE(CASE WHEN pl.nfl_entry_club_id = pt.nfl_club_id THEN 1 ELSE 0 END,0) AS same_team
		,CASE WHEN pt.nfl_player_id IS NULL THEN 0
			WHEN side_of_ball = 'offense' THEN play_time_offense
			WHEN side_of_ball = 'defense' THEN play_time_defense
			ELSE NULL
		END AS play_time
	FROM #temp_player_list pl
	LEFT JOIN #temp_play_times pt
		ON pl.nfl_player_id = pt.nfl_player_id
		AND pl.nfl_entry_year + 1 = pt.season
		AND pl.nfl_entry_club_id_not_bane = pt.nfl_club_id
	LEFT JOIN BaneProductionAnalytics.dbo.clubs pc
		ON pt.nfl_club_id = pc.nfl_club_id
		AND pc.is_disabled = 0
	LEFT JOIN BaneProductionAnalytics.dbo.clubs ec
		ON pl.nfl_entry_club_id_not_bane = ec.nfl_club_id
		AND ec.is_disabled = 0	
	WHERE pl.nfl_entry_year < 2017


	INSERT INTO #temp_player_play_time
	SELECT pl.nfl_player_id
		,player
		,CASE WHEN position IN ('SS','FS') THEN 'DS'
			WHEN position IN ('DP','RUSH','SAM') THEN 'OB'
			WHEN position IN ('WO','WR') THEN 'WR'
			WHEN position IN ('OH','RB') THEN 'RB'
			WHEN position IN ('OG','OC') THEN 'OG'
			ELSE position
		END AS position
		,nfl_entry_year
		,pt.season AS season
		,3 AS seasons_since_draft
		,CASE WHEN draft_round IS NULL THEN 8 ELSE draft_round END AS draft_round
		,ec.code AS draft_team
		,ec.nfl_club_id
		,on_53
		--,COALESCE(CASE WHEN pl.nfl_entry_club_id = pt.nfl_club_id THEN 1 ELSE 0 END,0) AS same_team
		,CASE WHEN pt.nfl_player_id IS NULL THEN 0
			WHEN side_of_ball = 'offense' THEN play_time_offense
			WHEN side_of_ball = 'defense' THEN play_time_defense
			ELSE NULL
		END AS play_time
	FROM #temp_player_list pl
	LEFT JOIN #temp_play_times pt
		ON pl.nfl_player_id = pt.nfl_player_id
		AND pl.nfl_entry_year + 2 = pt.season
		AND pl.nfl_entry_club_id_not_bane = pt.nfl_club_id
	LEFT JOIN BaneProductionAnalytics.dbo.clubs pc
		ON pt.nfl_club_id = pc.nfl_club_id
		AND pc.is_disabled = 0
	LEFT JOIN BaneProductionAnalytics.dbo.clubs ec
		ON pl.nfl_entry_club_id_not_bane = ec.nfl_club_id
		AND ec.is_disabled = 0	
	WHERE pl.nfl_entry_year < 2016


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Join the weighted average snap count to try and measure teammate quality.

OUTPUT TABLE:
#temp_player_with_teammates

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_player_with_teammates exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_player_with_teammates') IS NOT NULL
	DROP TABLE #temp_player_with_teammates

	SELECT *
		,ag.current_snap_grade_avg AS weighted_team_grade
	FROM #temp_player_play_time pt
	LEFT JOIN #temp_weighted_average_grades_order ag
		ON pt.nfl_player_id = ag.nfl_player_id
		AND pt.season = ag.season
		AND pt.nfl_club_id = ag.nfl_club_id
		AND ag.weighted_average_order = 1





--TRUNCATE TABLE Analytics.dbo.work_r_output_young_players_snap_pct
--INSERT INTO Analytics.dbo.work_r_input_young_players_snap_pct
--SELECT *
--FROM Analytics.dbo.work_r_output_young_players_snap_pct
