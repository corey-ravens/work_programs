

/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

v3 adds the weighted average snap grade
	this didn't really work because when a rookie was a starter at a certain position (like Zach Orr at IB), 
	the grade was really high because then it only took CJ's snap pct.  It wasn't a trie measure of who the
	player had to play 'behind'.

v4 switched to a count of 6.3 and 6.0 and above players on the team at that position, EXCLUDING the given player.


should you include games in the play time expectation calculation, or just do weighted average play time by team?
the latter is so guys like adeboyejo who play one game don't have the same effect as guys who play in 16 games.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Get down to one row of draft board position. Take a players draft
board position from as late in the process as available. 

OUTPUT TABLES:
#temp_draft_board_positions_with_order

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_draft_board_positions exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_draft_board_positions') IS NOT NULL
	DROP TABLE #temp_draft_board_positions

	SELECT player_id AS bane_player_id
		,position
		,CASE WHEN UPPER(LTRIM(RTRIM([type]))) = 'PRE-DRAFT' THEN 1
			WHEN UPPER(LTRIM(RTRIM([type]))) = 'POST-APR' THEN 2
			WHEN UPPER(LTRIM(RTRIM([type]))) = 'POST-FEB' THEN 3
			ELSE NULL
	END AS order_by
	INTO #temp_draft_board_positions
	FROM [BaneProductionAnalytics].[dbo].[draft_board_grades]
	WHERE position != ''
		AND position IS NOT NULL
		AND player_id <> 64668


-- Check if #temp_draft_board_positions_with_order exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_draft_board_positions_with_order') IS NOT NULL
	DROP TABLE #temp_draft_board_positions_with_order

	SELECT bane_player_id
		,position
		,RANK() OVER (PARTITION BY bane_player_id ORDER BY order_by) AS draft_board_position_order
	INTO #temp_draft_board_positions_with_order
	FROM #temp_draft_board_positions

/*
SELECT *
FROM #temp_draft_board_positions_with_order
*/

-- Check if #temp_draft_board_positions_latest exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_draft_board_positions_latest') IS NOT NULL
	DROP TABLE #temp_draft_board_positions_latest

	SELECT *
	INTO #temp_draft_board_positions_latest
	FROM #temp_draft_board_positions_with_order
	WHERE draft_board_position_order = 1

/*
SELECT *
FROM #temp_draft_board_positions_latest
*/


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Get down to one row of draft board grade. Take a players draft
board grade from as late in the process as available. 

OUTPUT TABLES:
#temp_draft_board_grades_with_order

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_draft_board_grades exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_draft_board_grades') IS NOT NULL
	DROP TABLE #temp_draft_board_grades

	SELECT player_id AS bane_player_id
		,legacy_grade
		,CASE WHEN UPPER(LTRIM(RTRIM([type]))) = 'PRE-DRAFT' THEN 1
			WHEN UPPER(LTRIM(RTRIM([type]))) = 'POST-APR' THEN 2
			WHEN UPPER(LTRIM(RTRIM([type]))) = 'POST-FEB' THEN 3
			ELSE NULL
	END AS order_by
	INTO #temp_draft_board_grades
	FROM [BaneProductionAnalytics].[dbo].[draft_board_grades]
	WHERE legacy_grade != ''
		AND legacy_grade IS NOT NULL
		AND player_id <> 64668


-- Check if #temp_draft_board_grades_with_order exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_draft_board_grades_with_order') IS NOT NULL
	DROP TABLE #temp_draft_board_grades_with_order

	SELECT bane_player_id
		,legacy_grade
		,RANK() OVER (PARTITION BY bane_player_id ORDER BY order_by) AS draft_board_grade_order
	INTO #temp_draft_board_grades_with_order
	FROM #temp_draft_board_grades

/*
SELECT *
FROM #temp_draft_board_grades_with_order
*/

-- Check if #temp_draft_board_grades_latest exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_draft_board_grades_latest') IS NOT NULL
	DROP TABLE #temp_draft_board_grades_latest

	SELECT *
	INTO #temp_draft_board_grades_latest
	FROM #temp_draft_board_grades_with_order
	WHERE draft_board_grade_order = 1

/*
SELECT *
FROM #temp_draft_board_grades_latest
*/


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Create a temp table with all players who have been on a 53 so you can have
a variable denoting whether a player ever made a 53. You may not want to count
these players against teams that get them.

OUTPUT TABLES:
#temp_player_on_53

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_player_on_53 exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_player_on_53') IS NOT NULL
	DROP TABLE #temp_player_on_53

	SELECT DISTINCT nfl_player_id
		,1 AS on_53
	INTO #temp_player_on_53
	FROM Analytics.dbo.analysis_players_gameweek_status
	WHERE status_roster_simple IN ('ACTIVE','INACTIVE')
		AND season_type IN ('REG','POST')


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Join the draft board position and player identifying information.

You can join this to the play data to get snaps played by first and second year players.

OUTPUT TABLES:
#temp_player_list

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_player_list exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_player_list') IS NOT NULL
	DROP TABLE #temp_player_list

	SELECT nfl_id AS nfl_player_id
		,pl.id AS bane_player_id
		,CONCAT(last_name,', ',goes_by) AS player
		,nfl_entry_year
		,draft_round
		,draft_number
		,cl.nfl_club_id AS nfl_entry_club_id_not_bane
		,COALESCE(po.position,pos.translation) AS position
		,pos.team AS side_of_ball
		,legacy_grade	
		,COALESCE(on_53,0) AS on_53
	INTO #temp_player_list
	FROM BaneProductionAnalytics.dbo.players pl
	LEFT JOIN #temp_draft_board_positions_latest po
		ON pl.id = po.bane_player_id
	LEFT JOIN #temp_draft_board_grades_latest gr
		ON pl.id = gr.bane_player_id
	LEFT JOIN BaneProductionAnalytics.dbo.clubs cl
		ON pl.nfl_entry_club_id = cl.id
		--AND cl.is_disabled = 0
	LEFT JOIN BaneProductionAnalytics.dbo.positions pos
		ON pl.position_id = pos.id
	LEFT JOIN #temp_player_on_53 o53
		ON pl.nfl_id = o53.nfl_player_id
	WHERE pl.is_deleted = 0
		AND pl.draft_year >= 2005
		AND ABS(pl.draft_year - pl.nfl_entry_year) < 10
		AND pl.nfl_id IS NOT NULL


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Create a Play Time Table

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_play_times exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_play_times') IS NOT NULL
	DROP TABLE #temp_play_times

	SELECT PlayerID AS nfl_player_id
		,pt.season
		,pt.ClubID AS nfl_club_id
		,SUM(CASE WHEN status_roster_simple = 'ACTIVE' OR (status_roster_simple = 'INACTIVE' AND injury_status_week IS NULL) THEN 1 ELSE 0 END) AS games
		,SUM(CASE WHEN (status_roster_simple = 'ACTIVE' OR (status_roster_simple = 'INACTIVE' AND injury_status_week IS NULL)) THEN CAST(OffensivePlays AS FLOAT) ELSE NULL END) / NULLIF(SUM(CASE WHEN (status_roster_simple = 'ACTIVE' OR (status_roster_simple = 'INACTIVE' AND injury_status_week IS NULL)) THEN CAST(TeamOffensivePlays AS FLOAT) ELSE NULL END),0) AS play_time_offense
		,SUM(CASE WHEN (status_roster_simple = 'ACTIVE' OR (status_roster_simple = 'INACTIVE' AND injury_status_week IS NULL)) THEN CAST(DefensivePlays AS FLOAT) ELSE NULL END) / NULLIF(SUM(CASE WHEN (status_roster_simple = 'ACTIVE' OR (status_roster_simple = 'INACTIVE' AND injury_status_week IS NULL)) THEN CAST(TeamDefensivePlays AS FLOAT) ELSE NULL END),0) AS play_time_defense
		,SUM(CASE WHEN (status_roster_simple = 'ACTIVE' OR (status_roster_simple = 'INACTIVE' AND injury_status_week IS NULL)) THEN CAST(SpecialTeamPlays AS FLOAT) ELSE NULL END) / NULLIF(SUM(CASE WHEN (status_roster_simple = 'ACTIVE' OR (status_roster_simple = 'INACTIVE' AND injury_status_week IS NULL)) THEN CAST(TeamSpecialTeamPlays AS FLOAT) ELSE NULL END),0) AS play_time_special_teams
	INTO #temp_play_times
	FROM ClubDB.dbo.PlayTime pt
	INNER JOIN [BaneProductionAnalytics].dbo.pro_games pg
		ON pt.GameKey = pg.nfl_game_key
	INNER JOIN Analytics.dbo.analysis_players_gameweek_status gs
		ON pt.PlayerID = gs.nfl_player_id
		AND pt.GameKey = gs.nfl_game_key
	WHERE UPPER(pg.season_type) = 'REG'
	GROUP BY PlayerID	  
		,pt.season
		,pt.ClubID


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Join the snaps to the player information

OUTPUT TABLE:
#temp_player_play_time

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_player_play_time exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_player_play_time') IS NOT NULL
	DROP TABLE #temp_player_play_time

	SELECT pl.nfl_player_id
		,player
		,CASE WHEN position IN ('SS','FS') THEN 'DS'
			WHEN position IN ('DP','RUSH','SAM') THEN 'OB'
			WHEN position IN ('WO','WR') THEN 'WR'
			WHEN position IN ('OH','RB') THEN 'RB'
			WHEN position IN ('OG','OC') THEN 'OG'
			ELSE position
		END AS position
		,nfl_entry_year
		,pt.season AS season
		,1 AS seasons_since_draft
		,CASE WHEN draft_round IS NULL THEN 8 ELSE draft_round END AS draft_round
		,ec.code AS draft_team
		,ec.nfl_club_id
		,on_53
		--,COALESCE(CASE WHEN pl.nfl_entry_club_id = pt.nfl_club_id THEN 1 ELSE 0 END,0) AS same_team
		,CASE WHEN pt.nfl_player_id IS NULL THEN 0
			WHEN side_of_ball = 'offense' THEN play_time_offense
			WHEN side_of_ball = 'defense' THEN play_time_defense
			ELSE NULL
		END AS play_time
		,games
	INTO #temp_player_play_time
	FROM #temp_player_list pl
	LEFT JOIN #temp_play_times pt
		ON pl.nfl_player_id = pt.nfl_player_id
		AND pl.nfl_entry_year = pt.season
		AND pl.nfl_entry_club_id_not_bane = pt.nfl_club_id
	LEFT JOIN BaneProductionAnalytics.dbo.clubs ec
		ON pl.nfl_entry_club_id_not_bane = ec.nfl_club_id
		AND ec.is_disabled = 0


	INSERT INTO #temp_player_play_time
	SELECT pl.nfl_player_id
		,player
		,CASE WHEN position IN ('SS','FS') THEN 'DS'
			WHEN position IN ('DP','RUSH','SAM') THEN 'OB'
			WHEN position IN ('WO','WR') THEN 'WR'
			WHEN position IN ('OH','RB') THEN 'RB'
			WHEN position IN ('OG','OC') THEN 'OG'
			ELSE position
		END AS position
		,nfl_entry_year
		,pt.season AS season
		,2 AS seasons_since_draft
		,CASE WHEN draft_round IS NULL THEN 8 ELSE draft_round END AS draft_round
		,ec.code AS draft_team
		,ec.nfl_club_id
		,on_53
		--,COALESCE(CASE WHEN pl.nfl_entry_club_id = pt.nfl_club_id THEN 1 ELSE 0 END,0) AS same_team
		,CASE WHEN pt.nfl_player_id IS NULL THEN 0
			WHEN side_of_ball = 'offense' THEN play_time_offense
			WHEN side_of_ball = 'defense' THEN play_time_defense
			ELSE NULL
		END AS play_time
		,games
	FROM #temp_player_list pl
	LEFT JOIN #temp_play_times pt
		ON pl.nfl_player_id = pt.nfl_player_id
		AND pl.nfl_entry_year + 1 = pt.season
		AND pl.nfl_entry_club_id_not_bane = pt.nfl_club_id
	LEFT JOIN BaneProductionAnalytics.dbo.clubs pc
		ON pt.nfl_club_id = pc.nfl_club_id
		AND pc.is_disabled = 0
	LEFT JOIN BaneProductionAnalytics.dbo.clubs ec
		ON pl.nfl_entry_club_id_not_bane = ec.nfl_club_id
		AND ec.is_disabled = 0	
	WHERE pl.nfl_entry_year < 2017


	INSERT INTO #temp_player_play_time
	SELECT pl.nfl_player_id
		,player
		,CASE WHEN position IN ('SS','FS') THEN 'DS'
			WHEN position IN ('DP','RUSH','SAM') THEN 'OB'
			WHEN position IN ('WO','WR') THEN 'WR'
			WHEN position IN ('OH','RB') THEN 'RB'
			WHEN position IN ('OG','OC') THEN 'OG'
			ELSE position
		END AS position
		,nfl_entry_year
		,pt.season AS season
		,3 AS seasons_since_draft
		,CASE WHEN draft_round IS NULL THEN 8 ELSE draft_round END AS draft_round
		,ec.code AS draft_team
		,ec.nfl_club_id
		,on_53
		--,COALESCE(CASE WHEN pl.nfl_entry_club_id = pt.nfl_club_id THEN 1 ELSE 0 END,0) AS same_team
		,CASE WHEN pt.nfl_player_id IS NULL THEN 0
			WHEN side_of_ball = 'offense' THEN play_time_offense
			WHEN side_of_ball = 'defense' THEN play_time_defense
			ELSE NULL
		END AS play_time
		,games
	FROM #temp_player_list pl
	LEFT JOIN #temp_play_times pt
		ON pl.nfl_player_id = pt.nfl_player_id
		AND pl.nfl_entry_year + 2 = pt.season
		AND pl.nfl_entry_club_id_not_bane = pt.nfl_club_id
	LEFT JOIN BaneProductionAnalytics.dbo.clubs pc
		ON pt.nfl_club_id = pc.nfl_club_id
		AND pc.is_disabled = 0
	LEFT JOIN BaneProductionAnalytics.dbo.clubs ec
		ON pl.nfl_entry_club_id_not_bane = ec.nfl_club_id
		AND ec.is_disabled = 0	
	WHERE pl.nfl_entry_year < 2016


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Count up the number of players at 6.0 and 6.3 and above by team and position, excluding the
target player.

First create a table noting all the teams a player played at least one game for. Then join those
teams to the grades table.

OUTPUT TABLE:
#temp_player_teams
#temp_grades_with_team
#temp_team_position_grade_counts

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_player_teams exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_player_teams') IS NOT NULL
	DROP TABLE #temp_player_teams

	SELECT nfl_player_id
		,season
		,club_id AS nfl_club_id
		,COUNT(nfl_game_key) AS active_games
	INTO #temp_player_teams
	FROM Analytics.dbo.analysis_players_gameweek_status gs
	WHERE season_type = 'REG'
		AND status_roster_simple = 'ACTIVE'
		AND season >= 2012
	GROUP BY nfl_player_id
		,season
		,club_id


-- Check if #temp_grades_with_team exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_grades_with_team') IS NOT NULL
	DROP TABLE #temp_grades_with_team

	SELECT pg.*
		,te.nfl_club_id
	INTO #temp_grades_with_team
	FROM Analytics.dbo.analysis_players_pro_grades pg
	INNER JOIN #temp_player_teams te
		ON pg.nfl_player_id = te.nfl_player_id
		AND pg.report_season = te.season
	WHERE pg.created_date = (SELECT MAX(created_date) FROM Analytics.dbo.analysis_players_pro_grades)


-- Check if #temp_team_position_grade_counts exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_team_position_grade_counts') IS NOT NULL
	DROP TABLE #temp_team_position_grade_counts

	SELECT pg.nfl_player_id
		,report_season AS season
		,pg.nfl_club_id
		,(SELECT COUNT(DISTINCT nfl_player_id) FROM #temp_grades_with_team pg2 WHERE pg.report_season = pg2.report_season  AND pg.nfl_club_id = pg2.nfl_club_id AND pg.position = pg2.position AND pg.bane_player_id <> pg2.bane_player_id AND pg2.grade_bucket >= 6.0) AS grade_count_60_up
		,(SELECT COUNT(DISTINCT nfl_player_id) FROM #temp_grades_with_team pg2 WHERE pg.report_season = pg2.report_season  AND pg.nfl_club_id = pg2.nfl_club_id AND pg.position = pg2.position AND pg.bane_player_id <> pg2.bane_player_id AND pg2.grade_bucket >= 6.3) AS grade_count_63_up
	INTO #temp_team_position_grade_counts
	FROM #temp_grades_with_team pg


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Join the team position grade counts to the play time table.

OUTPUT TABLE:
#temp_player_play_time_with_grade_count

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_player_play_time_with_grade_count exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_player_play_time_with_grade_count') IS NOT NULL
	DROP TABLE #temp_player_play_time_with_grade_count

	SELECT pt.*
		,grade_count_60_up
		,grade_count_63_up
	INTO #temp_player_play_time_with_grade_count
	FROM #temp_player_play_time pt
	LEFT JOIN #temp_team_position_grade_counts tc
		ON pt.nfl_player_id = tc.nfl_player_id
		AND pt.season = tc.season
		AND pt.nfl_club_id = tc.nfl_club_id



--TRUNCATE TABLE Analytics.dbo.work_r_input_young_players_snap_pct
--INSERT INTO Analytics.dbo.work_r_input_young_players_snap_pct

--SELECT *
--FROM Analytics.dbo.work_r_output_young_players_snap_pct
